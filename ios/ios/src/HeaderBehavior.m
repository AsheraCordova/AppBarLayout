//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSAppBarLayoutPlugin\src\main\java\com\google\android\material\appbar\HeaderBehavior.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "CoordinatorLayout.h"
#include "HeaderBehavior.h"
#include "J2ObjC_source.h"
#include "MathUtils.h"
#include "View.h"
#include "ViewOffsetBehavior.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Runnable.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface ASHeaderBehavior () {
 @public
  id<JavaLangRunnable> flingRunnable_;
  bool isBeingDragged_;
  int32_t activePointerId_;
  int32_t lastMotionY_;
  int32_t touchSlop_;
}

@end

J2OBJC_FIELD_SETTER(ASHeaderBehavior, flingRunnable_, id<JavaLangRunnable>)

inline int32_t ASHeaderBehavior_get_INVALID_POINTER(void);
#define ASHeaderBehavior_INVALID_POINTER -1
J2OBJC_STATIC_FIELD_CONSTANT(ASHeaderBehavior, INVALID_POINTER, int32_t)

@implementation ASHeaderBehavior

- (instancetype)initPackagePrivate {
  ASHeaderBehavior_initPackagePrivate(self);
  return self;
}

- (int32_t)setHeaderTopBottomOffsetWithADXCoordinatorLayout:(ADXCoordinatorLayout *)parent
                                                 withADView:(ADView *)header
                                                    withInt:(int32_t)newOffset {
  return [self setHeaderTopBottomOffsetWithADXCoordinatorLayout:parent withADView:header withInt:newOffset withInt:JavaLangInteger_MIN_VALUE withInt:JavaLangInteger_MAX_VALUE];
}

- (int32_t)setHeaderTopBottomOffsetWithADXCoordinatorLayout:(ADXCoordinatorLayout *)parent
                                                 withADView:(ADView *)header
                                                    withInt:(int32_t)newOffset
                                                    withInt:(int32_t)minOffset
                                                    withInt:(int32_t)maxOffset {
  int32_t curOffset = [self getTopAndBottomOffset];
  int32_t consumed = 0;
  if (minOffset != 0 && curOffset >= minOffset && curOffset <= maxOffset) {
    newOffset = ADMathUtils_clampWithInt_withInt_withInt_(newOffset, minOffset, maxOffset);
    if (curOffset != newOffset) {
      [self setTopAndBottomOffsetWithInt:newOffset];
      consumed = curOffset - newOffset;
    }
  }
  return consumed;
}

- (int32_t)getTopBottomOffsetForScrollingSibling {
  return [self getTopAndBottomOffset];
}

- (int32_t)scrollWithADXCoordinatorLayout:(ADXCoordinatorLayout *)coordinatorLayout
                               withADView:(ADView *)header
                                  withInt:(int32_t)dy
                                  withInt:(int32_t)minOffset
                                  withInt:(int32_t)maxOffset {
  return [self setHeaderTopBottomOffsetWithADXCoordinatorLayout:coordinatorLayout withADView:header withInt:[self getTopBottomOffsetForScrollingSibling] - dy withInt:minOffset withInt:maxOffset];
}

- (void)onFlingFinishedWithADXCoordinatorLayout:(ADXCoordinatorLayout *)parent
                                     withADView:(ADView *)layout {
}

- (bool)canDragViewWithADView:(ADView *)view {
  return false;
}

- (int32_t)getMaxDragOffsetWithADView:(ADView *)view {
  return -[((ADView *) nil_chk(view)) getHeight];
}

- (int32_t)getScrollRangeForDragFlingWithADView:(ADView *)view {
  return [((ADView *) nil_chk(view)) getHeight];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "I", 0x0, 0, 3, -1, 4, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x10, 5, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x0, 6, 7, -1, 8, -1, -1 },
    { NULL, "Z", 0x0, 9, 10, -1, 11, -1, -1 },
    { NULL, "I", 0x0, 12, 10, -1, 13, -1, -1 },
    { NULL, "I", 0x0, 14, 10, -1, 13, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(setHeaderTopBottomOffsetWithADXCoordinatorLayout:withADView:withInt:);
  methods[2].selector = @selector(setHeaderTopBottomOffsetWithADXCoordinatorLayout:withADView:withInt:withInt:withInt:);
  methods[3].selector = @selector(getTopBottomOffsetForScrollingSibling);
  methods[4].selector = @selector(scrollWithADXCoordinatorLayout:withADView:withInt:withInt:withInt:);
  methods[5].selector = @selector(onFlingFinishedWithADXCoordinatorLayout:withADView:);
  methods[6].selector = @selector(canDragViewWithADView:);
  methods[7].selector = @selector(getMaxDragOffsetWithADView:);
  methods[8].selector = @selector(getScrollRangeForDragFlingWithADView:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INVALID_POINTER", "I", .constantValue.asInt = ASHeaderBehavior_INVALID_POINTER, 0x1a, -1, -1, -1, -1 },
    { "flingRunnable_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isBeingDragged_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "activePointerId_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastMotionY_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "touchSlop_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setHeaderTopBottomOffset", "LADXCoordinatorLayout;LADView;I", "(Landroidx/coordinatorlayout/widget/CoordinatorLayout;TV;I)I", "LADXCoordinatorLayout;LADView;III", "(Landroidx/coordinatorlayout/widget/CoordinatorLayout;TV;III)I", "scroll", "onFlingFinished", "LADXCoordinatorLayout;LADView;", "(Landroidx/coordinatorlayout/widget/CoordinatorLayout;TV;)V", "canDragView", "LADView;", "(TV;)Z", "getMaxDragOffset", "(TV;)I", "getScrollRangeForDragFling", "<V:Lr/android/view/View;>Lcom/google/android/material/appbar/ViewOffsetBehavior<TV;>;" };
  static const J2ObjcClassInfo _ASHeaderBehavior = { "HeaderBehavior", "com.google.android.material.appbar", ptrTable, methods, fields, 7, 0x400, 9, 6, -1, -1, -1, 15, -1 };
  return &_ASHeaderBehavior;
}

@end

void ASHeaderBehavior_initPackagePrivate(ASHeaderBehavior *self) {
  ASViewOffsetBehavior_initPackagePrivate(self);
  self->activePointerId_ = ASHeaderBehavior_INVALID_POINTER;
  self->touchSlop_ = -1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASHeaderBehavior)
