//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSAppBarLayoutPlugin\src\main\java\com\google\android\material\appbar\ViewOffsetHelper.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "J2ObjC_source.h"
#include "View.h"
#include "ViewCompat.h"
#include "ViewOffsetHelper.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface ASViewOffsetHelper () {
 @public
  ADView *view_;
  int32_t layoutTop_;
  int32_t layoutLeft_;
  int32_t offsetTop_;
  int32_t offsetLeft_;
  bool verticalOffsetEnabled_;
  bool horizontalOffsetEnabled_;
}

@end

J2OBJC_FIELD_SETTER(ASViewOffsetHelper, view_, ADView *)

@implementation ASViewOffsetHelper

- (instancetype)initPackagePrivateWithADView:(ADView *)view {
  ASViewOffsetHelper_initPackagePrivateWithADView_(self, view);
  return self;
}

- (void)onViewLayout {
  layoutTop_ = [((ADView *) nil_chk(view_)) getTop];
  layoutLeft_ = [view_ getLeft];
}

- (void)applyOffsets {
  ADXViewCompat_offsetTopAndBottomWithADView_withInt_(view_, offsetTop_ - ([((ADView *) nil_chk(view_)) getTop] - layoutTop_));
  ADXViewCompat_offsetLeftAndRightWithADView_withInt_(view_, offsetLeft_ - ([view_ getLeft] - layoutLeft_));
}

- (bool)setTopAndBottomOffsetWithInt:(int32_t)offset {
  if (verticalOffsetEnabled_ && offsetTop_ != offset) {
    offsetTop_ = offset;
    [self applyOffsets];
    return true;
  }
  return false;
}

- (bool)setLeftAndRightOffsetWithInt:(int32_t)offset {
  if (horizontalOffsetEnabled_ && offsetLeft_ != offset) {
    offsetLeft_ = offset;
    [self applyOffsets];
    return true;
  }
  return false;
}

- (int32_t)getTopAndBottomOffset {
  return offsetTop_;
}

- (int32_t)getLeftAndRightOffset {
  return offsetLeft_;
}

- (int32_t)getLayoutTop {
  return layoutTop_;
}

- (int32_t)getLayoutLeft {
  return layoutLeft_;
}

- (void)setVerticalOffsetEnabledWithBoolean:(bool)verticalOffsetEnabled {
  self->verticalOffsetEnabled_ = verticalOffsetEnabled;
}

- (bool)isVerticalOffsetEnabled {
  return verticalOffsetEnabled_;
}

- (void)setHorizontalOffsetEnabledWithBoolean:(bool)horizontalOffsetEnabled {
  self->horizontalOffsetEnabled_ = horizontalOffsetEnabled;
}

- (bool)isHorizontalOffsetEnabled {
  return horizontalOffsetEnabled_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithADView:);
  methods[1].selector = @selector(onViewLayout);
  methods[2].selector = @selector(applyOffsets);
  methods[3].selector = @selector(setTopAndBottomOffsetWithInt:);
  methods[4].selector = @selector(setLeftAndRightOffsetWithInt:);
  methods[5].selector = @selector(getTopAndBottomOffset);
  methods[6].selector = @selector(getLeftAndRightOffset);
  methods[7].selector = @selector(getLayoutTop);
  methods[8].selector = @selector(getLayoutLeft);
  methods[9].selector = @selector(setVerticalOffsetEnabledWithBoolean:);
  methods[10].selector = @selector(isVerticalOffsetEnabled);
  methods[11].selector = @selector(setHorizontalOffsetEnabledWithBoolean:);
  methods[12].selector = @selector(isHorizontalOffsetEnabled);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "view_", "LADView;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "layoutTop_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "layoutLeft_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "offsetTop_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "offsetLeft_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "verticalOffsetEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "horizontalOffsetEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADView;", "setTopAndBottomOffset", "I", "setLeftAndRightOffset", "setVerticalOffsetEnabled", "Z", "setHorizontalOffsetEnabled" };
  static const J2ObjcClassInfo _ASViewOffsetHelper = { "ViewOffsetHelper", "com.google.android.material.appbar", ptrTable, methods, fields, 7, 0x0, 13, 7, -1, -1, -1, -1, -1 };
  return &_ASViewOffsetHelper;
}

@end

void ASViewOffsetHelper_initPackagePrivateWithADView_(ASViewOffsetHelper *self, ADView *view) {
  NSObject_init(self);
  self->verticalOffsetEnabled_ = true;
  self->horizontalOffsetEnabled_ = true;
  self->view_ = view;
}

ASViewOffsetHelper *new_ASViewOffsetHelper_initPackagePrivateWithADView_(ADView *view) {
  J2OBJC_NEW_IMPL(ASViewOffsetHelper, initPackagePrivateWithADView_, view)
}

ASViewOffsetHelper *create_ASViewOffsetHelper_initPackagePrivateWithADView_(ADView *view) {
  J2OBJC_CREATE_IMPL(ASViewOffsetHelper, initPackagePrivateWithADView_, view)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASViewOffsetHelper)
